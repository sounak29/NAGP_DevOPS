pipeline {
    agent any

    environment {
        notifyEmail = "sounak.roy@nagarro.com"
    }

    triggers {
        cron('H 0 * * *') 
    }

    stages {
        stage('Checkout') {
            steps {
                bat "echo hello"
            }
        }
        
        stage('Build') {
            steps {
                bat 'mvn clean'
            }
        }
        stage('Test') {
            steps {
                bat 'mvn test'
            }
        }
		stage('Sonarqube') {
			environment {
				scannerHome = tool 'Sonar_Testing'
			}
			steps {
				withSonarQubeEnv('sonarqube') {
					bat "${scannerHome}/bin/sonar-scanner"
				}
				timeout(time: 10, unit: 'MINUTES') {
					waitForQualityGate abortPipeline: true
				}
			}
		}
		stage("Quality Gate"){
			timeout(time: 1, unit: 'HOURS') 
			{
				waitForQualityGate abortPipeline: true
				def qg= waitForQualityGate()
				if (qg.status!= 'OK'){
					error "Pipeline aborted due to quality gate failure: ${qg.status}"
				}
			}         
			echo 'Quality Gate Passed' 
		}
		stage('Publish to Artifactory'){
			steps{
				rtMavenDeployer(
					id: 'deployer',
					serverId: 'Artifactory',
					releaseRepo: 'NAGP_Devops',
					snapshotRepo: 'NAGP_Devops'
				)
				rtMavenRun(
					pom: 'pom.xml',
					goals: 'clean install',
					deployerId: 'deployer'
				)
				rtPublishBuildInfo(
					serverId: 'Artifactory',
				)
			}
		}
		
    }

    post {
        success {
            // Send email notification on build start
            bat "echo sucess"
            
        }
    }
}
